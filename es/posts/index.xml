<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Blog</title>
    <link>https://raulmart.in/es/posts/</link>
    <description>Recent content in Posts on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 16 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://raulmart.in/es/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Una Al Mes - Julio 2020</title>
      <link>https://raulmart.in/es/posts/uam-julio/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/uam-julio/</guid>
      <description>UAM - Julio Volvemos a la carga con el reto mensual de Una Al Mes, ¿qué troleada nos esperará hoy?
Reconocimiento inicial Nos encontramos una web en la que podemos registrarnos e iniciar sesión.
Revisando el código de la web vemos el siguiente fragmento de JavaScript ofuscado:
javascript    document.getElementById(&amp;#34;item&amp;#34;).focus(); var _0x1e50=[&amp;#39;TOD&amp;#39;,&amp;#39;log&amp;#39;,&amp;#39;ish&amp;#39;,&amp;#39;):\x20&amp;#39;,&amp;#39;\x20an&amp;#39;,&amp;#39;int&amp;#39;,&amp;#39;nic&amp;#39;,&amp;#39;ow\x20&amp;#39;,&amp;#39;men&amp;#39;,&amp;#39;iro&amp;#39;,&amp;#39;le\x20&amp;#39;,&amp;#39;ple&amp;#39;,&amp;#39;O(h&amp;#39;,&amp;#39;the&amp;#39;]; (function(_0x886df4,_0x1e50a1){var _0x21eb8f=function(_0x40e947){while(--_0x40e947){_0x886df4[&amp;#39;push&amp;#39;](_0x886df4[&amp;#39;shift&amp;#39;]());}};_0x21eb8f(&amp;#43;&amp;#43;_0x1e50a1);}(_0x1e50,0x87));var _0x21eb=function(_0x886df4,_0x1e50a1){_0x886df4=_0x886df4-0x0;var _0x21eb8f=_0x1e50[_0x886df4];return _0x21eb8f;};function hi(){console[_0x21eb(&amp;#39;0x6&amp;#39;)](_0x21eb(&amp;#39;0x5&amp;#39;)&amp;#43;_0x21eb(&amp;#39;0x3&amp;#39;)&amp;#43;_0x21eb(&amp;#39;0xc&amp;#39;)&amp;#43;_0x21eb(&amp;#39;0x0&amp;#39;)&amp;#43;_0x21eb(&amp;#39;0xb&amp;#39;)&amp;#43;_0x21eb(&amp;#39;0x8&amp;#39;)&amp;#43;&amp;#39;Fin&amp;#39;&amp;#43;_0x21eb(&amp;#39;0x7&amp;#39;)&amp;#43;_0x21eb(&amp;#39;0x9&amp;#39;)&amp;#43;&amp;#39;d\x20e&amp;#39;&amp;#43;&amp;#39;nab&amp;#39;&amp;#43;_0x21eb(&amp;#39;0x1&amp;#39;)&amp;#43;_0x21eb(&amp;#39;0x4&amp;#39;)&amp;#43;&amp;#39;\x20pr&amp;#39;&amp;#43;_0x21eb(&amp;#39;0xa&amp;#39;)&amp;#43;&amp;#39;\x20im&amp;#39;&amp;#43;_0x21eb(&amp;#39;0x2&amp;#39;)&amp;#43;_0x21eb(&amp;#39;0xd&amp;#39;)&amp;#43;&amp;#39;tat&amp;#39;&amp;#43;&amp;#39;ion&amp;#39;);}   Limpiando y ordenando un poco
javascript    var data=[&amp;#39;TOD&amp;#39;,&amp;#39;log&amp;#39;,&amp;#39;ish&amp;#39;,&amp;#39;):\x20&amp;#39;,&amp;#39;\x20an&amp;#39;,&amp;#39;int&amp;#39;,&amp;#39;nic&amp;#39;,&amp;#39;ow\x20&amp;#39;,&amp;#39;men&amp;#39;,&amp;#39;iro&amp;#39;,&amp;#39;le\x20&amp;#39;,&amp;#39;ple&amp;#39;,&amp;#39;O(h&amp;#39;,&amp;#39;the&amp;#39;]; (function(data, index) { var reorder = function(index) { while (--index) { data.</description>
    </item>
    
    <item>
      <title>Blind Hacker - fwhibbit 2020</title>
      <link>https://raulmart.in/es/posts/fwhibbit-c0r0n4con-blindhacker/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/fwhibbit-c0r0n4con-blindhacker/</guid>
      <description>Blind Hacker - fwhibbit 2020 Hoy vamos a atacar el nuevo reto web del CTF fwhibbit 2020, si no habéis participado os recomiendo registraros y probar los retos, están muy currados.
Introducción En este reto tenemos un Bot de Telegram, @blindhackerchallbot, el cual &amp;ldquo;analizará&amp;rdquo; la URL que le pidamos. La nota nos dice que existe un servidor web en http://blind_hacker por lo que supondremos que será accesible solo desde el bot de Telegram, teniendo que aprovecharnos del bot para intentar explotarlo.</description>
    </item>
    
    <item>
      <title>Cybex 2020 CTF</title>
      <link>https://raulmart.in/es/posts/cybex-ctf-2020/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/cybex-ctf-2020/</guid>
      <description>Cybex 2020 Challenges Writeup Reversing Serial Se trata de un ejecutable .NET, utilizando IDA obtenemos la flag directamente, puesto que no esta ofuscada.
Loadme Para este reto utilicé GHidra, aunque IDA podría haber funcionado exactamente igual. Viendo las funciones que exporta la DLL, vemos &amp;ldquo;catchMe&amp;rdquo;. Dentro de ella, podemos ver un array de valores en hexadecimal, al que se le aplica un XOR en un bucle for. Aplicando la clave XOR del bucle al array en hexadecimal obtenemos la flag.</description>
    </item>
    
    <item>
      <title>Obscurity HTB WriteUp</title>
      <link>https://raulmart.in/es/posts/obscure-writeup/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/obscure-writeup/</guid>
      <description>HTB Obscurity writeup HackTheBox Obscurity machine write up, easy Linux machine. The process as always: Scan &amp;ndash;&amp;gt; Initial foothold &amp;ndash;&amp;gt; Own User &amp;ndash;&amp;gt; Own Root.
Escaneo inicial bash    # added to hosts as 10.10.10.168 Obscurity $ sudo nmap -sV -sC -sT -O -o nmapinitial obscurity   Resultados del escaneo inicial con nmap:
Scan results nmap    Starting Nmap 7.80 ( https://nmap.org ) at 2020-01-07 02:44 CET Nmap scan report for Obscurity (10.</description>
    </item>
    
    <item>
      <title>Mango HTB WriteUp</title>
      <link>https://raulmart.in/es/posts/mango-writeup/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/mango-writeup/</guid>
      <description>HTB Mango writeup Maquina Linux de dificultad media, con un nombre interesante que me recuerda a cierta base de datos. El proceso como siempre será: Escanear &amp;ndash;&amp;gt; Punto de entrada inicial &amp;ndash;&amp;gt; Usuario &amp;ndash;&amp;gt; Root
Análisis inicial bash    # added to hosts as 10.10.10.171 Mango $ sudo nmap -sV -sC -sT -O -o nmapinitial Mango   Resultados del análisis inicial con nmap: bash    Starting Nmap 7.</description>
    </item>
    
    <item>
      <title>H-c0n 2020 qualifier Papify (1&amp;2)</title>
      <link>https://raulmart.in/es/posts/h-c0n-papify-writeup/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/h-c0n-papify-writeup/</guid>
      <description>Clasificatorio H-c0n 2020: Papify (1 y 2) Papify es un desafío de explotación en C/C++ en el que tenemos una imagen de Docker. El contenedor es básicamente lo que se ejecuta en la dirección proporcionada nc ctf.h-c0n.com 60003.
La mayoría de los pasos son comunes entre ambas versiones del desafío (v1 y v2), cambiando el método utilizado para la conseguir el leak de libc.
Recopilando información Esta es la estructura del archivo: Bash    .</description>
    </item>
    
    <item>
      <title>OpenAdmin HTB WriteUp</title>
      <link>https://raulmart.in/es/posts/openadmin-writeup/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/openadmin-writeup/</guid>
      <description>HTB OpenAdmin writeup HackTheBox OpenAdmin machine write up, easy Linux machine. El proceso como siempre será: Escanear &amp;ndash;&amp;gt; Punto de entrada inicial &amp;ndash;&amp;gt; Usuario &amp;ndash;&amp;gt; Root
Análisis inicial bash    # añadido a /etc/hosts como 10.10.10.171 OpenAdmin $ sudo nmap -sV -sC -sT -O -o nmapinitial OpenAdmin   Resultados de nmap nmap    Starting Nmap 7.80 ( https://nmap.org ) at 2020-01-07 02:44 CET Nmap scan report for OpenAdmin (10.</description>
    </item>
    
    <item>
      <title>Postman HTB WriteUp</title>
      <link>https://raulmart.in/es/posts/postman-writeup/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/postman-writeup/</guid>
      <description>HTB Postman writeup &amp;lsquo;Easy&amp;rsquo; machine, user was a bit of a challenge, rooting was easier. The process is: Scan &amp;ndash;&amp;gt; Initial foothold &amp;ndash;&amp;gt; Own User &amp;ndash;&amp;gt; Own Root.
Initial Scan bash    # add to hosts and scan sudo echo &amp;#34;10.10.10.160 postman&amp;#34; &amp;gt;/etc/hosts sudo nmap -sV -sC -sT -O -o nmapinitial Postman   Scan results nmap    Starting Nmap 7.80 ( https://nmap.org ) at 2019-12-27 02:33 CET Nmap scan report for postman (10.</description>
    </item>
    
    <item>
      <title>Traverxec HTB WriteUp</title>
      <link>https://raulmart.in/es/posts/traverxec-writeup/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/traverxec-writeup/</guid>
      <description>HTB Traverxec writeup &amp;lsquo;Easy&amp;rsquo; machine, user was a bit of a challenge, rooting was easier. The process is: Scan &amp;ndash;&amp;gt; Initial foothold &amp;ndash;&amp;gt; Own User &amp;ndash;&amp;gt; Own Root.
Initial Scan bash    # added to hosts as 10.10.10.165 Traverxec $ sudo nmap -sV -sC -sT -O -o nmapinitial Traverxec   Scan results nmap    Starting Nmap 7.80 ( https://nmap.org ) at 2019-12-29 13:51 CET Nmap scan report for Traverxec (10.</description>
    </item>
    
    <item>
      <title>Creando la web</title>
      <link>https://raulmart.in/es/posts/my-first-post/</link>
      <pubDate>Sat, 18 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/es/posts/my-first-post/</guid>
      <description>Construyendo la web Para construir la web hemos optado por usar Hugo como generador de sitios estáticos, de forma que podamos automatizar el mantenimiento y despliegue, que realizaremos mediante Travis y GitHub pages.
Hugo Hugo es un generador de sitios estáticos escrito en Go.
Para instalarlo y crear la página web inicial, hemos utilizado las instrucciones disponibles en la documentación oficial.
El tema elegido como base es &amp;ldquo;Terminal&amp;rdquo;, sobre el cual realizaremos todas las modificaciones necesarias.</description>
    </item>
    
  </channel>
</rss>