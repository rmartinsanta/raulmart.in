<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cybex 2020 on Blog</title>
    <link>https://raulmart.in/tags/cybex-2020/</link>
    <description>Recent content in Cybex 2020 on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 07 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://raulmart.in/tags/cybex-2020/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cybex 2020 CTF</title>
      <link>https://raulmart.in/posts/cybex-ctf-2020/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://raulmart.in/posts/cybex-ctf-2020/</guid>
      <description>Cybex 2020 Challenges Writeup Reversing Serial .NET executable, using IDA we get the flag directly, since it is not obfuscated.
Loadme For this challenge I used GHidra, although IDA could have worked exactly the same. Looking at the functions that the DLL exports, we see &amp;ldquo;catchMe&amp;rdquo;. Inside it, we can see an array of values in hexadecimal, to which an XOR is applied in a for loop. Applying the XOR key of the loop to the hexadecimal array we obtain the flag.</description>
    </item>
    
  </channel>
</rss>